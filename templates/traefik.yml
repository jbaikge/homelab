# Put a pod on every node in the cluster so it is always available
deployment:
  kind: DaemonSet

ingressRoute:
  dashboard:
    enabled: true
    matchRule: Host(`traefik.${domain}`)
    entryPoints:
      - websecure

# Enable Observability
logs:
  general:
    level: INFO
  # This enables access logs, outputting them to Traefik's standard output by default. The [Access Logs Documentation](https://doc.traefik.io/traefik/observability/access-logs/) covers formatting, filtering, and output options.
  access:
    enabled: true

api:
  dashboard: true
  insecure: true

metrics:
  addInternals: true
  prometheus:
    addRoutersLabels: true

# We will route with Gateway API instead.
ingressClass:
  enabled: false

# Enable Gateway API Provider & Disable the KubernetesIngress provider
# Providers tell Traefik where to find routing configuration.
providers:
  kubernetesIngress:
     enabled: false
  kubernetesGateway:
     enabled: true

## Gateway Listeners
gateway:
  listeners:
    web:           # HTTP listener that matches entryPoint `web`
      port: 80
      protocol: HTTP
      namespacePolicy: All

    websecure:         # HTTPS listener that matches entryPoint `websecure`
      port: 443
      protocol: HTTPS  # TLS terminates inside Traefik
      namespacePolicy: All
      mode: Terminate
      certificateRefs:
        - kind: Secret
          name: local-selfsigned-tls  # the Secret we created before the installation
          group: ""

# Configure Network Ports and EntryPoints
# EntryPoints are the network listeners for incoming traffic.
ports:
  # Defines the HTTP entry point named 'web'
  web:
    port: 80
    nodePort: 30000
    # Instructs this entry point to redirect all traffic to the 'websecure' entry point
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true

  # Defines the HTTPS entry point named 'websecure'
  websecure:
    port: 443
    nodePort: 30001
