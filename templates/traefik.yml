# Put a pod on every node in the cluster so it is always available
deployment:
  kind: DaemonSet
ingressRoute:
  dashboard:
    enabled: true
    matchRule: Host(`traefik.${domain}`)
    entryPoints:
      - websecure
logs:
  access:
    enabled: true
api:
  dashboard: true
  insecure: true
metrics:
  addInternals: true
  prometheus:
    addRoutersLabels: true
providers:
  kubernetesGateway:
    enabled: true
  # kubernetesCRD:
  #   # -- Load Kubernetes IngressRoute provider
  #   enabled: true
  #   # -- Allows IngressRoute to reference resources in namespace other than theirs
  #   allowCrossNamespace: true
  #   # -- Allows to reference ExternalName services in IngressRoute
  #   allowExternalNameServices: false
  #   # -- Allows to return 503 when there is no endpoints available
  #   allowEmptyServices: true
  #   # -- When the parameter is set, only resources containing an annotation with the same value are processed.
  #   ingressClass: ""
  #   # labelSelector: environment=production,method=traefik
  #   # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.
  #   namespaces: []
  #   # -- Defines whether to use Native Kubernetes load-balancing mode by default.
  #   nativeLBByDefault: false
gateway:
  namespacePolicy: All
ports:
  web:
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true
  websecure:
    tls:
      enabled: true
# securityContext:
#   seccompProfile:
#     type: RuntimeDefault
